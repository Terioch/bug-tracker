@using Microsoft.AspNetCore.Identity;
@using BugTracker.Helpers;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<Project>

<div>
    @if (!Model.Any()) 
    {
        <div class="alert alert-info fs-5">
            There are no projects associated with that search term.
        </div>
    } else 
    {
        <table class="table">
            <thead>
                <tr>          
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col"></th>                     
                </tr>
            </thead>
            <tbody>
                @foreach (var project in Model)
                {                            
                    <tr>
                        <td>@project.Name</td>                        
                        <td>@project.Description</td> 
                        <td class="d-flex flex-column" style="gap: 0.25rem">
                            <a asp-controller="Project" asp-action="Details" asp-route-id="@project.Id" class="link-success">Details</a>                                        
                            <a href="/User/RemoveProject/@ViewBag.Id?projectId=@project.Id" class="link-danger"
                                onclick="return confirm('Are you sure you want to remove the project @project.Name from the user @ViewBag.UserName?')">
                                Remove
                            </a>    
                        </td>                                                                                                           
                    </tr>                                         
                }
            </tbody> 
        </table>
        <div>
            <p class="text-secondary" style="font-size: 14px">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
                of @Model.PageCount
            </p>                   
            @Html.PagedListPager(
                Model.ToPagedList(), 
                page => Url.Action("Details", new { ViewBag.Id, projectsPage = page }),
                new PagedListRenderOptions() 
                {
                    UlElementClasses = new string[] { "pagination", "mb-0" },
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
        </div>
    }
</div>