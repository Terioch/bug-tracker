@using Microsoft.AspNetCore.Identity;
@using BugTracker.Helpers;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<Ticket>

<div>
    @if (!Model.Any()) 
    {
        <div class="alert alert-primary fs-5">
            There are no tickets associated with that search term.
        </div>
    } else 
    {
            <table class="table">
            <thead>
                <tr>          
                    <th scope="col">Title</th>
                    <th scope="col">Submitted By</th>
                    <th scope="col">Developer</th>                     
                    <th scope="col">Status</th>                                             
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in Model)
                {            
                    <tr>
                        <td>@ticket.Title</td>                        
                        <td>@ticket.Submitter.UserName</td> 
                        @if (ticket.AssignedDeveloperId != null)
                        {
                            <td>@ticket.AssignedDeveloper.UserName</td>   
                        } else
                        {
                            <td>None</td>
                        }                                 
                        <td>@ticket.Status</td>                        
                        <td>
                            <a asp-controller="Ticket" asp-action="Details" asp-route-id="@ticket.Id" class="link-info">Details</a>
                        </td>
                    </tr>                                         
                }
            </tbody> 
        </table>
        <div>
            <p class="text-secondary" style="font-size: 14px">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
                of @Model.PageCount
            </p>                   
            @Html.PagedListPager(
                Model.ToPagedList(), 
                page => Url.Action("Details", new { id = TempData["UserId"], ticketsPage = page }),
                new PagedListRenderOptions() 
                {
                    UlElementClasses = new string[] { "pagination", "mb-0" },
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
        </div>
    }
</div>
