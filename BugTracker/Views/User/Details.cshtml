@using Microsoft.AspNetCore.Identity;
@using BugTracker.Helpers;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject UserManager<ApplicationUser> userManager
@inject TicketHelper ticketHelper

@model UserViewModel

@{
    ViewData["Title"] = "User";
    ApplicationUser loggedInUser = await userManager.FindByNameAsync(User.Identity.Name);
    ApplicationUser user = userManager.Users.First(u => u.Id == Model.Id);
    List<string> roles = (List<string>)await userManager.GetRolesAsync(user) ?? new List<string>();    
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div id="userContainer" data-id="@Model.Id" class="card">
  <div class="card-header bg-light">
    <h1 class="fs-3 mt-2">@Model.UserName</h1>     
    @if (Model.Id == loggedInUser.Id || await userManager.IsInRoleAsync(loggedInUser, "Admin"))
    {
        <span><a asp-action="Edit" asp-route-id="@Model.Id" class="link-success">Edit</a> |</span>
    }
    <a asp-action="ListUsers" class="link-primary">Back to List</a>
    @*@if (await userManager.IsInRoleAsync(loggedInUser, "Admin")) 
    {
        <span>| <a href="" class="text-danger">Delete</a></span>            
    }*@         
  </div>
  <div class="card-body">
      <ul class="list-group list-group-horizontal d-flex flex-wrap">
        <li class="list-group-item list-group-item-light rounded-0 border-start-0 border-top-0 border-bottom-0">
            <p class="fw-bold mb-1">First Name</p>
            <small>@Model.FirstName</small>  
        </li>
        <li class="list-group-item list-group-item-light rounded-0 border-start-0 border-top-0 border-bottom-0">
            <p class="fw-bold mb-1">Last Name</p>
            <small>@Model.LastName</small>  
        </li>
        <li class="list-group-item list-group-item-light rounded-0 border-start-0 border-top-0 border-bottom-0">
            <p class="fw-bold mb-1">Email</p>
            <small>@Model.Email</small>      
        </li>
        <li class="list-group-item list-group-item-light rounded-0 border-start-0 border-top-0 border-end-0 border-bottom-0">
            <p class="fw-bold mb-1">Role(s)</p>
            @if (roles.Any())
            {
                <small>@string.Join(", ", roles)</small>
            } else
            {
                <small>None</small>       
            }             
        </li>
      </ul>

      <div class="row">    
        <!-- Project List Card -->
        <div class="col mt-3">
            <div class="card-header bg-light">
                <h1 class="fs-3 mt-1">Associated Projects</h1>
                <p class="text-secondary mb-0">Projects for this user</p>
            </div>
            <div class="card-body table-responsive">
                <div class="d-sm-flex justify-content-between align-items-center">
                    <div class="input-group-sm">
                        <input id="projectListSearchInput" class="form-control mb-3" placeholder="Search Projects..." style="max-width: 200px" />
                    </div>      
                    @if (await userManager.IsInRoleAsync(loggedInUser, "Admin"))
                    {
                        <a class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#userProjectsAssignmentModal">Assign New Project</a>
                    } else
                    {
                        <a class="btn btn-info mb-3 disabled">Assign New Project</a>   
                    }                 
                </div>
                <div id="projectListContainer">
                    @if (!Model.Projects.Any()) 
                    {
                        <div class="alert alert-info fs-5">
                            There are no projects associated with this user
                        </div>
                    } else 
                    {
                        <table class="table">
                            <thead>
                                <tr>          
                                    <th scope="col">Name</th>
                                    <th scope="col">Description</th>
                                    <th scope="col"></th>                     
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var project in Model.Projects)
                                {                            
                                    <tr>
                                        <td>@project.Name</td>                        
                                        <td>@project.Description</td>                                         
                                        <td class="d-flex flex-column" style="gap: 0.25rem">
                                            <a asp-controller="Project" asp-action="Details" asp-route-id="@project.Id" class="link-success">Details</a>                                        
                                            @if (await userManager.IsInRoleAsync(loggedInUser, "Admin"))
                                            {
                                                <a href="/User/RemoveProject/@Model.Id?projectId=@project.Id" class="link-danger"
                                                    onclick="return confirm('Are you sure you want to remove the project @project.Name from the user @Model.UserName?')">
                                                    Remove
                                                </a>   
                                            }                                                
                                        </td>                                                                                                           
                                    </tr>                                         
                                }
                            </tbody> 
                        </table>
                        <div>
                            <p class="text-secondary" style="font-size: 14px">
                                Page @(Model.Projects.PageCount < Model.Projects.PageNumber ? 0 : Model.Projects.PageNumber) 
                                of @Model.Projects.PageCount
                            </p>                   
                            @Html.PagedListPager(
                                Model.Projects.ToPagedList(), 
                                page => Url.Action("Details", new { Model.Id, projectsPage = page }),
                                new PagedListRenderOptions() 
                                {
                                    UlElementClasses = new string[] { "pagination", "mb-0" },
                                    LiElementClasses = new string[] { "page-item" },
                                    PageClasses = new string[] { "page-link" }
                                })
                        </div>
                    }
                </div>                                  
            </div>
        </div>        

        <!-- Ticket list card -->
        <div class="col mt-3">
            <div class="card-header bg-light">
                <h1 class="fs-3 mt-1">Assigned Tickets</h1>
                <p class="text-secondary mb-0">Condensed ticket information</p>
            </div>
            <div class="card-body table-responsive">
                <div class="d-sm-flex justify-content-between align-items-center">
                    <div class="input-group-sm">
                        <input id="ticketListSearchInput" class="form-control mb-3" placeholder="Search Tickets..." style="max-width: 200px" />
                    </div>                      
                    @if (await userManager.IsInRoleAsync(loggedInUser, "Admin") || await userManager.IsInRoleAsync(loggedInUser, "Project Manager") 
                        || await userManager.IsInRoleAsync(loggedInUser, "Submitter"))
                    {
                        <a class="btn btn-success mb-3" asp-controller="Ticket" asp-action="Create">Create New Ticket</a>     
                    } else
                    {
                        <a class="btn btn-success mb-3 disabled" asp-controller="Ticket" asp-action="Create">Create New Ticket</a>
                    }                                                                                                        
                </div>   
                <div id="ticketListContainer">
                    @if (!Model.Tickets.Any()) 
                    {
                        <div class="alert alert-info fs-5">
                            There are no tickets associated with this user
                        </div>
                    } else 
                    {
                         <table class="table">
                            <thead>
                                <tr>          
                                    <th scope="col">Title</th>
                                    <th scope="col">Submitted By</th>
                                    <th scope="col">Developer</th>                     
                                    <th scope="col">Status</th>                                             
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var ticket in Model.Tickets)
                                {            
                                    <tr>
                                        <td>@ticket.Title</td>                        
                                        <td>@ticket.Submitter.UserName</td> 
                                        @if (ticket.AssignedDeveloperId != null)
                                        {
                                            <td>@ticket.AssignedDeveloper.UserName</td>   
                                        } else
                                        {
                                            <td>None</td>
                                        }                                 
                                        <td>@ticket.Status</td>                                 
                                        <td>
                                            <a asp-controller="Ticket" asp-action="Details" asp-route-id="@ticket.Id" class="link-info">Details</a>
                                        </td>
                                    </tr>                                         
                                }
                            </tbody> 
                        </table>
                        <div>
                            <p class="text-secondary" style="font-size: 14px">
                                Page @(Model.Tickets.PageCount < Model.Tickets.PageNumber ? 0 : Model.Tickets.PageNumber) 
                                of @Model.Tickets.PageCount
                            </p>                   
                            @Html.PagedListPager(
                                Model.Tickets.ToPagedList(), 
                                page => Url.Action("Details", new { Model.Id, ticketsPage = page }),
                                new PagedListRenderOptions() 
                                {
                                    UlElementClasses = new string[] { "pagination", "mb-0" },
                                    LiElementClasses = new string[] { "page-item" },
                                    PageClasses = new string[] { "page-link" }
                                })
                        </div>
                    }
                </div>                                
            </div>
        </div>
      </div>       
  </div>
</div>

<!-- User Projects Assignment Modal -->
<div class="modal fade" id="userProjectsAssignmentModal" tabindex="-1" aria-labelledby="userProjectsAssignmentModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">     
            <form method="post" action="/User/AddProject/@Model.Id">
                <div class="modal-header">
                    <h5 class="modal-title">Assign a new project to this user</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Project List Select -->
                    <label class="create-ticket-select-label control-label mb-2 text-secondary">Project To Assign</label>                    
                    <select asp-for="ToBeAssignedProjectId" class="form-select mb-4" aria-label="Ticket project">                                                
                        @foreach (var project in Model.UnassignedProjects)
                        {
                            <option value="@project.Id">@project.Name</option>
                        }                        
                    </select>           
                    <div asp-validation-summary="ModelOnly" class="text-danger mt-3"></div>
                </div>
                <div class="modal-footer text-left">                
                    <button type="submit" class="btn btn-success add-user">Add Project</button>                
                </div> 
            </form>                           
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/js/user/user.js"></script>
}