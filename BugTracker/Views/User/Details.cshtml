@using Microsoft.AspNetCore.Identity
@using BugTracker.Helpers;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject UserManager<ApplicationUser> userManager
@inject TicketHelper ticketHelper

@model UserViewModel

@{
    ViewData["Title"] = "User";
    ApplicationUser loggedInUser = await userManager.FindByNameAsync(User.Identity.Name);
    ApplicationUser user = userManager.Users.First(u => u.Id == Model.Id);    
    List<string> roles = (List<string>)await userManager.GetRolesAsync(user);
}

<div id="userContainer" class="card">
  <div class="card-header bg-light">
      <h1 class="fs-3 mt-2">@Model.UserName</h1>     
      <a asp-action="ListUsers">Back to List</a> |      
      <a href="" class="text-danger" data-bs-toggle="modal" data-bs-target="#deleteUserModal">Delete</a>     
  </div>
  <div class="card-body">
      <ul class="list-group list-group-horizontal d-flex flex-wrap">
        <li class="list-group-item list-group-item-light rounded-0 border-start-0 border-top-0 border-bottom-0">
            <p class="fw-bold mb-1">First Name</p>
            <small>@Model.FirstName</small>  
        </li>
        <li class="list-group-item list-group-item-light rounded-0 border-start-0 border-top-0 border-bottom-0">
            <p class="fw-bold mb-1">Last Name</p>
            <small>@Model.LastName</small>  
        </li>
        <li class="list-group-item list-group-item-light rounded-0 border-start-0 border-top-0 border-bottom-0">
            <p class="fw-bold mb-1">Email</p>
            <small>@Model.Email</small>      
        </li>
        <li class="list-group-item list-group-item-light rounded-0 border-start-0 border-top-0 border-end-0 border-bottom-0">
            <p class="fw-bold mb-1">Role(s)</p>
            <small>@string.Join(", ", roles)</small>      
        </li>
      </ul>

      <div class="row">    
        <!-- Project list card -->
        <div class="col mt-3">
            <div class="card-header bg-light">
                <h1 class="fs-3 mt-1">Associated Projects</h1>
                <p class="text-secondary mb-0">Projects for this user</p>
            </div>
            <div class="card-body table-responsive">
                <div class="d-sm-flex justify-content-between align-items-center">
                    <div class="input-group-sm">
                        <input id="projectListSearchInput" class="form-control mb-3" placeholder="Search Projects..." />
                    </div>      
                    @if (await userManager.IsInRoleAsync(loggedInUser, "Admin"))
                    {
                        <a class="btn btn-primary mb-3" asp-controller="Project" asp-action="Create">Create New Project</a>
                    } else
                    {
                        <a class="btn btn-primary mb-3 disabled" asp-controller="Project" asp-action="Create">Create New Project</a>   
                    }                 
                </div>                    
                <table class="table">
                    <thead>
                        <tr>          
                            <th scope="col">Name</th>
                            <th scope="col">Description</th>
                            <th scope="col">Role(s)</th>                     
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var project in Model.Projects)
                        {                            
                            <tr>
                                <td>@project.Name</td>                        
                                <td>@project.Description</td> 
                                <td>
                                    <a asp-controller="Project" asp-action="Details" asp-route-id="@project.Id" class="link-success">Details</a>    
                                </td>                                                                                                           
                            </tr>                                         
                        }
                    </tbody> 
                </table>
                <div>
                    <p class="text-secondary" style="font-size: 14px">
                        Page @(Model.Projects.PageCount < Model.Projects.PageNumber ? 0 : Model.Projects.PageNumber) 
                        of @Model.Projects.PageCount
                    </p>                   
                    @Html.PagedListPager(
                        Model.Projects.ToPagedList(), 
                        page => Url.Action("Details", new { page }),
                        new PagedListRenderOptions() 
                        {
                            UlElementClasses = new string[] { "pagination", "mb-0" },
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" }
                        })
                </div>  
            </div>
        </div>        

        <!-- Ticket list card -->
        <div class="col mt-3">
            <div class="card-header bg-light">
                <h1 class="fs-3 mt-1">Assigned Tickets</h1>
                <p class="text-secondary mb-0">Condensed ticket information</p>
            </div>
            <div class="card-body table-responsive">
                <div class="d-sm-flex justify-content-between align-items-center">
                    <div class="input-group-sm">
                        <input id="ticketListSearchInput" class="form-control mb-3" placeholder="Search Tickets..." />
                    </div>
                        @if (await ticketHelper.CanUserCreateTickets(loggedInUser))
                        {
                            <a class="btn btn-success mb-3" asp-controller="Ticket" asp-action="Create">Create New Ticket</a>
                        } else
                        {
                            <a class="btn btn-success mb-3 disabled" asp-controller="Ticket" asp-action="Create">Create New Ticket</a>    
                        }                                                 
                    </div>                    
                <table class="table">
                    <thead>
                        <tr>          
                            <th scope="col">Title</th>
                            <th scope="col">Submitted By</th>
                            <th scope="col">Developer</th>                     
                            <th scope="col">Status</th>                     
                            <th scope="col">Priority</th>  
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var ticket in Model.Tickets)
                        {            
                            <tr>
                                <td>@ticket.Title</td>                        
                                <td>@ticket.Submitter.UserName</td> 
                                @if (ticket.AssignedDeveloper != null)
                                {
                                    <td>@ticket.AssignedDeveloper.UserName</td>   
                                } else
                                {
                                    <td>None</td>
                                }                                 
                                <td>@ticket.Status</td>
                                <td>@ticket.Priority</td>
                                <td>
                                    <a asp-controller="Ticket" asp-action="Details" asp-route-id="@ticket.Id" class="link-info">Details</a>
                                </td>
                            </tr>                                         
                        }
                    </tbody> 
                </table>
                <div>
                    <p class="text-secondary" style="font-size: 14px">
                        Page @(Model.Tickets.PageCount < Model.Tickets.PageNumber ? 0 : Model.Tickets.PageNumber) 
                        of @Model.Tickets.PageCount
                    </p>                   
                    @Html.PagedListPager(
                        Model.Tickets.ToPagedList(), 
                        page => Url.Action("Details", new { page }),
                        new PagedListRenderOptions() 
                        {
                            UlElementClasses = new string[] { "pagination", "mb-0" },
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" }
                        })
                </div>  
            </div>
        </div>
      </div>       
  </div>
</div>