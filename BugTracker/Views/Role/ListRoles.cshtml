@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject UserManager<ApplicationUser> userManager

@model BugTracker.Models.UserRoleViewModel

@{
    ViewData["Title"] = "UserRoles";
    ApplicationUser loggedInUser = await userManager.FindByNameAsync(User.Identity.Name);
}

<style>
    btn, .bi, .user-dropdown-item, .page-link {
        cursor: pointer;
    }   
</style>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div id="rolesMain" class="card bg-light">
    <div class="card-header mb-3">
        <h1 class="fs-3 mt-2">Manage users assigned to each role</h1>
        @if (await userManager.IsInRoleAsync(loggedInUser, "Owner"))
        {
            <a asp-action="CreateRole" class="link-primary">Create a new role</a>
        } 
    </div>  

    @if (!Model.Roles.Any())
    {
        <div>
            <div class="alert alert-info">
                No roles to display
            </div>
            <div class="card-body">
                <h5 class="card-title">
                    Use the button below to create a new role
                </h5>
                @if (await userManager.IsInRoleAsync(loggedInUser, "Owner"))
                {
                    <a asp-action="CreateRole" class="btn btn-success text-white" style="width: auto">
                        Create Role
                    </a>
                } else
                {
                    <a class="btn btn-success text-white disabled" style="width: auto">
                        Create Role
                    </a>
                }         
            </div>
        </div>
    }
    else
    {   
        <div class="row row-cols-1 row-cols-lg-2 g-4 px-3"> 
            @foreach (var role in Model.Roles) 
            {               
                <div class="col">
                    <partial name="_RoleCard" model="role" />  
                </div>
            }                               
        </div>                             

        <!-- User Dropdown Modal -->
        <div class="modal fade" id="userDropdownModal" tabindex="-1" aria-labelledby="userDropdownModal" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <form>
                  <div class="modal-header">
                    <h5 class="modal-title" id="userDropownModalTitle">Select a user from the dropdown below</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">                    
                    <input id="userDropdownModalRoleIdInput" name="RoleId" type="hidden" />
                    <!-- User Select Dropdown -->
                    <label class="control-label mb-2 text-secondary" for="userSelectDropdown">Users</label>
                    <select asp-for="UserId" class="form-select" id="userSelectDropdown">
                        @foreach (var user in Model.Users) 
                        {     
                            <option value="@user.Id">@user.UserName</option>           
                        }
                    </select>
                    <div asp-validation-summary="ModelOnly" class="text-danger mt-3"></div> 
                  </div>
                  <div class="modal-footer text-left">                                   
                    <button formaction="@Url.Action("AddUser")" formmethod="post" type="submit" class="btn btn-success add-user" data-bs-dismiss="modal">Add Selected User</button>
                    <button formaction="@Url.Action("RemoveUser")" formmethod="post" type="submit" class="btn btn-warning remove-danger" data-bs-dismiss="modal">Remove Selected User</button>
                  </div>
              </form>              
            </div>
          </div>
        </div>       
    }
</div>
 
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
