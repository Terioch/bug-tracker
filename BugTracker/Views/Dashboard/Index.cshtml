@using BugTracker.Helpers
@using Microsoft.AspNetCore.Identity
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject ProjectHelper projectHelper
@inject TicketHelper ticketHelper
@inject UserManager<ApplicationUser> userManager

@model DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
    ApplicationUser loggedInUser = await userManager.FindByNameAsync(User.Identity.Name);
}

<!--Layout 2 - Basic-->
<div class="px-2">
    <div class="row g-3 mb-3">        
        <div class="col col-12 col-xl-3 col-md-6 col-sm-6 h-100">
            <div class="alert alert-info text-center mb-0" role="alert">
                <h4 class="alert-heading">@await projectHelper.GetUserProjectCount()</h4>
                <p class="fw-bold">Current Projects</p>                
            </div>
        </div> 
        <div class="col col-12 col-xl-3 col-md-6 col-sm-6 h-100">
            <div class="alert alert-secondary text-center mb-0" role="alert">
              <h4 class="alert-heading">@await ticketHelper.GetUserTicketCount()</h4>
              <p class="fw-bold">Associated Tickets</p>                  
            </div> 
        </div>        
        <div class="col col-12 col-xl-3 col-md-6 col-sm-6 h-100">
            <div class="alert alert-success text-center mb-0" role="alert">
              <h4 class="alert-heading">@await projectHelper.GetUsersInRolesCountOnUserRoleProjects()</h4>
              <p class="fw-bold">Active Users</p>                  
            </div>
        </div>
        <div class="col col-12 col-xl-3 col-md-6 col-sm-6 h-100">
            <div class="alert alert-dark text-center mb-0">
                <h4 class="alert-heading">@await projectHelper.GetUsersInRolesCountOnUserRoleProjects(new string[] { "Developer" })</h4>
                <p class="fw-bold">Total Developers</p>
            </div>            
        </div>
    </div>
    <div class="row g-3 mb-3">
        <div class="col col-xl-3 col-lg-6 col-md-6 col-sm-6">
            <div class="bg-light p-3 text-center h-100 rounded">
                <h2 class="fs-5 text-dark mb-3">Tickets by Type</h2>
                <canvas id="ticketTypeChart"></canvas>            
            </div>                        
        </div>
        <div class="col col-xl-3 col-lg-6 col-md-6 col-sm-6">
            <div class="bg-light p-3 h-100 text-center rounded">
                <h2 class="fs-5 text-dark mb-3">Tickets by Priority</h2>
                <canvas id="ticketPriorityChart"></canvas>
            </div>
        </div>
        <div class="col col-xl-6 col-lg-12">
            <div class="bg-light p-3 h-100 text-center rounded">
                <h2 class="fs-5 text-dark mb-3">Tickets by Status</h2>
                <canvas id="ticketStatusChart"></canvas>            
            </div>           
        </div>
    </div>
    <div class="row g-3">
        <div class="col">
            <div class="card">
                <div class="card-header bg-light">
                    <h1 class="fs-3 mt-1">Ticket history</h1>
                    <p class="text-secondary mb-0">Recent changes to associated tickets</p>
                </div>
                <div class="card-body">
                    <div class="input-group-sm">
                        <input id="historyListSearchInput" class="form-control mb-3" placeholder="Search History..." style="max-width: 175px"  />
                    </div>
                    <div id="historyListContainer">
                        @if (!Model.TicketHistoryRecords.Any())
                        {
                            <div class="alert alert-info fs-5 mt-3" role="alert">
                                There is no available history for your tickets
                            </div>
                        } else
                        {        
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>          
                                            <th scope="col">Title</th>                                            
                                            <th scope="col">Property</th>
                                            <th scope="col">Old Value</th>
                                            <th scope="col">New Value</th>                                                                                
                                            <th scope="col">Date Changed</th>                     
                                            <th scope="col"></th>                     
                                        </tr>
                                    </thead>                                                
                                    <tbody>                                     
                                        @foreach (var record in Model.TicketHistoryRecords) 
                                        {
                                            <tr>
                                               <td>@record.Ticket.Title</td>                                        
                                               <td>@record.Property</td>
                                                @if (record.OldValue != null) {
                                                    <td>@record.OldValue</td>
                                                } else
                                                {
                                                    <td>Null</td>
                                                }     
                                                @if (record.NewValue != null) {
                                                    <td>@record.NewValue</td>
                                                } else
                                                {
                                                    <td>Null</td>
                                                }                                                   
                                                <td>@record.ModifiedAt</td>
                                                <td>
                                                    <a asp-controller="Ticket" asp-action="Details" asp-route-id="@record.TicketId" class="link-info">Details</a>
                                                </td>
                                            </tr>   
                                        }                                                  
                                    </tbody>
                                </table>
                            </div>                            
                            <div>
                                <p class="text-secondary" style="font-size: 14px">
                                    Page @(Model.TicketHistoryRecords.PageCount < Model.TicketHistoryRecords.PageNumber ? 0 : Model.TicketHistoryRecords.PageNumber) 
                                    of @Model.TicketHistoryRecords.PageCount
                                </p>                   
                                @Html.PagedListPager(
                                    Model.TicketHistoryRecords, 
                                    page => Url.Action("Index", new { historyPage = page }),
                                    new PagedListRenderOptions() 
                                    {
                                        UlElementClasses = new string[] { "pagination", "mb-0" },
                                        LiElementClasses = new string[] { "page-item" },
                                        PageClasses = new string[] { "page-link" }
                                    })
                            </div>                         
                        }
                    </div>                      
                </div>
            </div>
        </div>
    </div>
</div>

<!--Layout 1 - Original-->
@*<div>
    <div class="row g-4 mb-3">
        <div class="col col-xl-3 col-md-6">
            <div class="alert alert-info text-center" role="alert">
                <h4 class="alert-heading">@await projectHelper.GetUserProjectCount()</h4>
                <p class="fw-bold">Active Projects</p>                
            </div>
            <div class="alert alert-secondary text-center" role="alert">
              <h4 class="alert-heading">@await ticketHelper.GetUserTicketCount()</h4>
              <p class="fw-bold">Associated Tickets</p>                  
            </div>            
            <div class="alert alert-success text-center" role="alert">
              <h4 class="alert-heading">@userManager.Users.Count()</h4>
              <p class="fw-bold">Total Users</p>                  
            </div>
        </div>
        <div class="col col-xl-3 col-md-6">
            <div class="bg-light p-3 h-100 text-center rounded">
                <h2 class="fs-5 text-dark mb-3">Tickets by Priority</h2>
                <canvas id="ticketPriorityChart"></canvas>
            </div>            
        </div>
        <div class="col col-xl-6 col-lg-12">
            <div class="bg-light p-3 h-100 text-center rounded">
                <h2 class="fs-5 text-dark mb-3">Tickets by Status</h2>
                <canvas id="ticketStatusChart"></canvas>            
            </div>
        </div>
    </div>    
    <div class="row g-4">
        <div class="col col-xl-8">
            <div class="card">
                <div class="card-header bg-light">
                    <h1 class="fs-3 mt-1">Ticket history</h1>
                    <p class="text-secondary mb-0">Records of changes to all associated tickets</p>
                </div>
                <div class="card-body">
                    <div class="input-group-sm">
                        <input id="historyListSearchInput" class="form-control mb-3" placeholder="Search History..." style="max-width: 175px"  />
                    </div>
                    <div id="historyListContainer">
                        @if (!Model.TicketHistoryRecords.Any())
                        {
                            <div class="alert alert-info fs-5 mt-3" role="alert">
                                There is no available history for your tickets
                            </div>
                        } else
                        {        
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>          
                                            <th scope="col">Title</th>                                            
                                            <th scope="col">Property</th>
                                            <th scope="col">Old Value</th>
                                            <th scope="col">New Value</th>                                                                                
                                            <th scope="col">Date Changed</th>                     
                                            <th scope="col"></th>                     
                                        </tr>
                                    </thead>                                                
                                    <tbody>                                     
                                        @foreach (var record in Model.TicketHistoryRecords) 
                                        {
                                            <tr>
                                               <td>@record.Ticket.Title</td>                                        
                                               <td>@record.Property</td>
                                                @if (record.OldValue != null) {
                                                    <td>@record.OldValue</td>
                                                } else
                                                {
                                                    <td>Null</td>
                                                }     
                                                @if (record.NewValue != null) {
                                                    <td>@record.NewValue</td>
                                                } else
                                                {
                                                    <td>Null</td>
                                                }                                                   
                                                <td>@record.ModifiedAt</td>
                                                <td>
                                                    <a asp-controller="Ticket" asp-action="Details" asp-route-id="@record.TicketId" class="link-info">Details</a>
                                                </td>
                                            </tr>   
                                        }                                                  
                                    </tbody>
                                </table>
                            </div>                            
                            <div>
                                <p class="text-secondary" style="font-size: 14px">
                                    Page @(Model.TicketHistoryRecords.PageCount < Model.TicketHistoryRecords.PageNumber ? 0 : Model.TicketHistoryRecords.PageNumber) 
                                    of @Model.TicketHistoryRecords.PageCount
                                </p>                   
                                @Html.PagedListPager(
                                    Model.TicketHistoryRecords, 
                                    page => Url.Action("Index", new { historyPage = page }),
                                    new PagedListRenderOptions() 
                                    {
                                        UlElementClasses = new string[] { "pagination", "mb-0" },
                                        LiElementClasses = new string[] { "page-item" },
                                        PageClasses = new string[] { "page-link" }
                                    })
                            </div>                         
                        }
                    </div>                      
                </div>
            </div>
        </div>
        <div class="col col-xl-4">
            <div class="row">
                <div class="col col-xl-12 col-lg-6 col-md-6 col-sm-12">
                    <div class="card mb-4">
                        <header class="card-header">
                            <h1 class="fs-4 mb-0">Quick Actions</h1>
                        </header>
                        <div class="card-body pb-0">  
                            @if (await userManager.IsInRoleAsync(loggedInUser, "Admin"))
                            {
                                <a class="btn btn-primary mb-3" asp-controller="Project" asp-action="Create">                        
                                    Create New Project
                                </a>   
                            } else
                            {
                                <button class="btn btn-primary mb-3 disabled">                        
                                    Create New Project
                                </button>
                            }
                            @if (await userManager.IsInRoleAsync(loggedInUser, "Admin") || await userManager.IsInRoleAsync(loggedInUser, "Project Manager") 
                                || await userManager.IsInRoleAsync(loggedInUser, "Submitter"))
                            {
                                <a class="btn btn-success mb-3" asp-controller="Ticket" asp-action="Create">                        
                                    Create New Ticket
                                </a>    
                            } else
                            {
                                <button class="btn btn-success mb-3 disabled">                        
                                    Create New Ticket
                                </button> 
                            }                                                               
                        </div>
                    </div>
                </div>
                <div class="col col-xl-12 col-lg-6 col-md-6 col-sm-12">
                    <div class="bg-light p-3 text-center h-100 rounded">
                        <h2 class="fs-5 text-dark mb-3">Tickets by Type</h2>
                        <canvas id="ticketTypeChart"></canvas>            
                    </div>
                </div>
            </div>                       
        </div>
    </div>    
</div>*@

@section Scripts {        
    <script src="~/js/chart/chart.js" asp-append-version="true"></script>
    <script src="~/js/dashboard/dashboard.js" asp-append-version="true"></script>
}