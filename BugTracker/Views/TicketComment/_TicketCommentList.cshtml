@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject UserManager<ApplicationUser> userManager

@model IPagedList<TicketComment>

@{
    ApplicationUser loggedInUser = await userManager.FindByNameAsync(User.Identity.Name);
}

<div>
    @if (!Model.Any())
    {
        <div class="alert alert-info fs-5 mt-3" role="alert">
            There are no comments matching that search term.
        </div>
    } else
    {
        <ul id="commentListGroup" class="list-group list-group-flush mb-3">
            @foreach (var comment in Model)
            {
                <li class="comment-list-item list-group-item" data-commentId="@comment.Id">
                    @if (comment.Author == loggedInUser || await userManager.IsInRoleAsync(loggedInUser, "Admin"))
                    {
                        <small class="text-secondary">@comment?.Author?.UserName commented on @comment.CreatedAt 
                            <a asp-controller="TicketComment" asp-action="Delete" asp-route-id="@comment.Id" class="link-danger ms-1" 
                                onclick="return confirm('Are you sure you want to delete this comment?')">
                                Delete
                            </a>   
                        </small>
                    } else
                    {
                        <small class="text-secondary">@comment.Author.UserName commented on @comment.CreatedAt</small>
                    }                                
                    <p class="mt-2 mb-0">@comment.Value</p>
                </li>
            }
        </ul>

        <div>
            <p class="text-secondary" style="font-size: 14px">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
                of @Model.PageCount
            </p>                   
            @Html.PagedListPager(
                Model, 
                page => Url.Action("Details", "Ticket" ,new { ViewBag.Id, commentsPage = page }),
                new PagedListRenderOptions() 
                {
                    UlElementClasses = new string[] { "pagination", "mb-0" },
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
        </div>
    }
</div>    