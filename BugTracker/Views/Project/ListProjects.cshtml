@using Microsoft.AspNetCore.Identity
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject UserManager<ApplicationUser> userManager

@model IPagedList<Project>

@{
    ViewData["Title"] = "Projects Page";
    ApplicationUser loggedInUser = await userManager.FindByNameAsync(User.Identity.Name);
}

<div id="projectListPageContainer" class="card">
  <div class="card-header bg-light">
      <h1 class="fs-3 mt-2">Your Projects</h1>   
  </div>
  <div class="card-body">
    <div class="d-sm-flex justify-content-between align-items-center">  
        <div class="input-group-sm">
            <input id="projectListSearchInput" class="form-control mb-3" placeholder="Search Project..." style="max-width: 175px" />
        </div>        
        @if (await userManager.IsInRoleAsync(loggedInUser, "Admin"))
        {
            <a class="btn btn-primary mb-3" asp-action="Create">
                <span style="margin-right: 2px">Create Project</span> <i class="fa-solid fa-plus fa-lg"></i>
            </a>
        } else
        {
            <a class="btn btn-primary mb-3 disabled" asp-action="Create">
                <span style="margin-right: 2px">Create Project</span> <i class="fa-solid fa-plus fa-lg"></i>
            </a>
        }            
    </div>
    <div id="projectListContainer">
        @if (!Model.Any() || Model == null) 
        {              
            <div class="alert alert-primary fs-5 mt-3" role="alert">
              There are currently no projects associated with your account.
            </div>    
        } 
        else
        {   
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>          
                            <th scope="col">Project Name</th>
                            <th scope="col">Ticket Count</th>
                            <th scope="col">Description</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var project in Model)
                        {                                                     
                            <tr>
                                <td>@project.Name</td>
                                <td>@project.Tickets.ToList().Count</td>                                                                                            
                                <td>@project?.Description</td>
                                <td class="d-flex flex-column">                                   
                                    <a asp-action="Details" asp-route-id="@project?.Id" class="link-success">Details</a>                            
                                </td>
                            </tr>                                        
                        }     
                    </tbody> 
                </table> 
                <div>
                    <p class="text-secondary" style="font-size: 14px">
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
                        of @Model.PageCount
                    </p>                   
                    @Html.PagedListPager(
                        Model, 
                        page => Url.Action("ListProjects", new { page }),
                        new PagedListRenderOptions() 
                        {
                            UlElementClasses = new string[] { "pagination", "mb-0" },
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" }
                        })
                </div>   
            </div>
        }        
    </div>                     
  </div>
</div>

@section Scripts {
    <script src="~/js/project/projectList.js" asp-append-version="true" type="module"></script>
}