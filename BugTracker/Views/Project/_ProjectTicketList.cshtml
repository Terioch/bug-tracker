@using BugTracker.Helpers
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@model IPagedList<Ticket>

<div>
    @if (!Model.Any())
    {                            
        <div class="alert alert-info">
            There are no tickets matching that search term.
        </div>
    } else
    {
        <table class="table">
            <thead>
                <tr>          
                    <th scope="col">Title</th>
                    <th scope="col">Submitted By</th>
                    <th scope="col">Developer</th>
                    <th scope="col">Status</th>                   
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in Model)
                {                                                
                    <tr>
                        <td>@ticket.Title</td>                        
                        <td>@ticket.Submitter.UserName</td>   
                        @if (ticket.AssignedDeveloper != null)
                        {
                            <td>@ticket.AssignedDeveloper.UserName</td>
                        } else
                        {
                            <td>None</td>
                        }
                        <td>@ticket.Status</td>                       
                        <td class="">                                        
                            <a asp-controller="Ticket" asp-action="Details" asp-route-id="@ticket?.Id" class="link-info">Details</a>                            
                        </td>
                    </tr>                               
                }
            </tbody>     
        </table>
        <div>
            <p class="text-secondary" style="font-size: 14px">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
                of @Model.PageCount
            </p>                   
            @Html.PagedListPager(
                Model.ToPagedList(), 
                page => Url.Action("Details", "Project", new { id = TempData["ProjectId"], ticketsPage = page }),
                new PagedListRenderOptions() 
                {
                    UlElementClasses = new string[] { "pagination", "mb-0" },
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
        </div>
    }
</div>