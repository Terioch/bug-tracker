@using BugTracker.Helpers
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject UserManager<ApplicationUser> userManager
@inject RoleManager<IdentityRole> roleManager
@inject ProjectHelper projectHelper
@inject RoleHelper roleHelper

@model BugTracker.Models.ProjectViewModel

@{
    ViewData["Title"] = "Project Details";
    ApplicationUser loggedInUser = await userManager.FindByNameAsync(User.Identity.Name);
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}


<div id="projectContainer" data-id="@Model?.Id" class="card">
    <div class="card-header bg-light">
        <h1 class="fs-3 mt-2">@Model.Name</h1>
        @if (await userManager.IsInRoleAsync(loggedInUser, "Admin") || await userManager.IsInRoleAsync(loggedInUser, "Demo Admin"))
        {
            <span><a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |</span>
        }
        
        <a asp-action="ListProjects">Back to List</a>

        @if (await userManager.IsInRoleAsync(loggedInUser, "Admin") || await userManager.IsInRoleAsync(loggedInUser, "Demo Admin"))
        {
            <span>
                | <a asp-action="Delete" asp-route-id="@Model.Id" class="text-danger" 
                    onclick="return confirm('Are you sure you want to delete the project @Model.Name?')">
                    Delete
                </a>
            </span>           
        }       
    </div>
    <div class="card-body">
        <section class="row g-3 d-flex flex-column flex-xl-row">
        <div class="col">
            <div class="row mx-1">
                <div class="col card-body border-bottom">
                    <h2 class="card-subtitle text-secondary mb-2" style="font-size: 14px">Project Description</h2>
                    <p class="card-text">@Model?.Description</p> 
                </div>
            </div>

            <div class="row mt-3">
                <div class="">
                    <div class="card-header bg-light">
                        <h1 class="fs-3 mt-1">Assigned Personnel</h1>
                        <p class="text-secondary mb-0">Users working on this project</p>
                    </div>
                    <div class="card-body table-responsive">
                        <div class="d-sm-flex justify-content-between align-items-center">
                            <div class="input-group-sm">
                                <input id="userListSearchInput" class="form-control mb-3" placeholder="Search Users..." />
                            </div>
                                @if (await projectHelper.IsUserAuthorizedToManageUsers(loggedInUser, Model.Id))
                                {
                                    <button id="manageUsersBtn" class="btn btn-secondary mb-3" data-bs-toggle="modal" data-bs-target="#projectUsersAssignmentModal">
                                        Assign New User
                                    </button>   
                                } else
                                {
                                    <button class="btn btn-secondary mb-3 disabled">
                                        Assign New User
                                    </button>
                                }                                                                                          
                        </div>     
                        
                        <div id="userListContainer">
                            @if (!Model.Users.Any())
                            {
                                <div class="alert alert-primary">
                                    There are no users associated with this project.
                                </div>
                            } else
                            {                                
                                <table class="table">
                                    <thead>
                                        <tr>          
                                            <th scope="col">Name</th>
                                            <th scope="col">Email</th>
                                            <th scope="col">Role(s)</th>                     
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var user in Model.Users)
                                        {
                                            List<string> roles = (List<string>)await userManager.GetRolesAsync(user);

                                            <tr>
                                                <td>@user.UserName</td>                        
                                                <td>@user.Email</td> 
                                                <td>@string.Join(", ", roles)</td>
                                                @*@if (!roles.Any())
                                                {
                                                    <td>@string.Join(", ", roles)</td>
                                                } else
                                                {
                                                    <td>No assigned roles</td>
                                                }  *@     
                                                <td class="d-flex flex-column">                                            
                                                    <a asp-controller="User" asp-action="Details" asp-route-id="@user.Id" class="link-success">Details</a>
                                                    @if (await projectHelper.IsUserAuthorizedToManageUsers(loggedInUser, Model.Id))
                                                    {
                                                        <a asp-controller="Project" asp-action="RemoveUser" asp-route-id="@Model.Id" asp-route-userId="@user.Id" class="link-danger"
                                                            onclick="return confirm('Are you sure you want to remove the user @user.UserName from the project @Model.Name?')">
                                                            Remove
                                                        </a>       
                                                    }
                                                </td>
                                            </tr>                                                                              
                                        }
                                    </tbody> 
                                </table>
                                <div>
                                    <p class="text-secondary" style="font-size: 14px">
                                        Page @(Model.Users.PageCount < Model.Users.PageNumber ? 0 : Model.Users.PageNumber) 
                                        of @Model.Users.PageCount
                                    </p>                   
                                    @Html.PagedListPager(
                                        Model.Users.ToPagedList(), 
                                        page => Url.Action("Details", new { Model.Id, usersPage = page }),
                                        new PagedListRenderOptions() 
                                        {
                                            UlElementClasses = new string[] { "pagination", "mb-0" },
                                            LiElementClasses = new string[] { "page-item" },
                                            PageClasses = new string[] { "page-link" }
                                        })
                                </div>
                            }                                
                        </div>                          
                    </div>
                </div>
            </div>
        </div>

        <div class="col mt-3">
            <div class="">
                <div class="card-header bg-light">
                    <h1 class="fs-3 mt-1">Project Tickets</h1>
                    <p class="text-secondary mb-0">Condensed ticket information</p>                    
                </div>
                <div class="card-body table-responsive">
                    <div class="d-sm-flex justify-content-between align-items-center">
                        <div class="input-group-sm">
                            <input id="ticketListSearchInput" class="form-control mb-3" placeholder="Search Users..."  />
                        </div>
                        @if (await userManager.IsInRoleAsync(loggedInUser, "Admin") || await userManager.IsInRoleAsync(loggedInUser, "Project Manager") 
                            || await userManager.IsInRoleAsync(loggedInUser, "Submitter"))
                        {
                            <a asp-controller="Ticket" asp-action="Create" class="btn btn-success mb-3">
                                Create New Ticket
                            </a>
                        } else
                        {
                            <a asp-controller="Ticket" asp-action="Create" class="btn btn-success mb-3 disabled">
                                Create New Ticket
                            </a> 
                        }                                                        
                    </div> 

                    <div id="ticketListContainer">
                        @if (!Model.Tickets.Any())
                        {                            
                            <div class="alert alert-primary">
                                There are no tickets associated with this project.
                            </div>
                        } else
                        {
                            <table class="table">
                                <thead>
                                    <tr>          
                                        <th scope="col">Title</th>
                                        <th scope="col">Submitted By</th>
                                        <th scope="col">Developer</th>
                                        <th scope="col">Status</th>                                      
                                        <th scope="col"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ticket in Model.Tickets)
                                    {                                                
                                        <tr>
                                            <td>@ticket.Title</td>                        
                                            <td>@ticket.Submitter.UserName</td>   
                                            @if (ticket.AssignedDeveloper != null)
                                            {
                                                <td>@ticket.AssignedDeveloper.UserName</td>
                                            } else
                                            {
                                                <td>None</td>
                                            }
                                            <td>@ticket.Status</td>
                                            <td class="">                                        
                                                <a asp-controller="Ticket" asp-action="Details" asp-route-id="@ticket?.Id" class="link-info">Details</a>                            
                                            </td>
                                        </tr>                               
                                    }
                                </tbody>     
                            </table>
                            <div>
                                <p class="text-secondary" style="font-size: 14px">
                                    Page @(Model.Tickets.PageCount < Model.Tickets.PageNumber ? 0 : Model.Tickets.PageNumber) 
                                    of @Model.Tickets.PageCount
                                </p>                   
                                @Html.PagedListPager(
                                    Model.Tickets, 
                                    page => Url.Action("Details", new { Model.Id, ticketsPage = page }),
                                    new PagedListRenderOptions() 
                                    {
                                        UlElementClasses = new string[] { "pagination", "mb-0" },
                                        LiElementClasses = new string[] { "page-item" },
                                        PageClasses = new string[] { "page-link" }
                                    })
                            </div>
                        }
                    </div>                      
                </div>
            </div>
        </div>
      </section>
  </div>
</div>

<!-- Project Users Assignment Modal -->
<div class="modal fade" id="projectUsersAssignmentModal" tabindex="-1" aria-labelledby="projectUsersAssignmentModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" action="/Project/AddUser/@Model.Id">
                <div class="modal-header">
                <h5 class="modal-title">Assign a new user to this project</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                </div>
                <div class="modal-body">
                    <!-- Project List Select -->
                    <label class="create-ticket-select-label control-label mb-2 text-secondary">User To Assign</label>                    
                    <select asp-for="ToBeAssignedUserId" class="form-select mb-4" aria-label="Ticket project">                                                
                        @foreach (var user in Model.UnassignedUsers)
                        {
                            <option value="@user.Id">@user.UserName</option>
                        }                        
                    </select>                   
                    <div id="projectUsersAssignmentvalidationErrors" class="fs-6 text-danger mt-3"></div>
                </div>
                <div class="modal-footer text-left">                
                    <button type="submit" class="btn btn-primary add-user">Add User</button>              
                </div>
            </form>            
        </div>
    </div>
</div>

<!-- Delete Project Modal -->
@*<div class="modal fade" id="deleteProjectModal" tabindex="-1" aria-labelledby="deleteProjectModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Confirm Project Removal</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-footer">
        <button asp-action="Delete" asp-route-id="@Model.Id" type="button" id="deleteProjectBtn" class="btn btn-danger" data-bs-dismiss="modal" aria-label="Confirm">Confirm</button>       
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Cancel">Cancel</button>       
      </div>
    </div>
  </div>
</div>*@
